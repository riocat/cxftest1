生成这样结构的项目要先建project的空文件夹在打开项目之后再创建module

wsdl2java -p com.yang.cxftest1.service.helloservice http://localhost/service/helloService?wsdl 生成的是java 用javac编译
wsimport -p com.yang.cxftest1.service.helloservice http://localhost/service/helloService?wsdl
jar -cf 名字.jar 目标目录 打包

如果客户端要调用多个服务器的服务，直接用用命令生成客户端代码时会由于不同服务所调用实体类生成类objectfactroy等类互相覆盖造成异常。
如果客户端使用动态方式调用要求客户端的实体类必须和service接口在同一包下。
如果使用spring配置的接口方式调用只需和服务端相同的接口类和实体类(包路径也可以不一样)，打个包送给客户端即可。
也可以使用wsiport -keep 这样的命令获得接口和实体类源码将其他类统统删除，修改下接口里的代码将除了@WebService外的注解全部删除。
使用动态方式调用多个service时可能因为内省缓存原因造成除第一个service外的其他serivce调用异常。

服务器多service客户端解决方式
UserInfoService:根据wsdl使用wsdl2java直接生成java文件，只保留接口和实体类，接口一定保留好@WebService(name = "*", targetNamespace = "*")注解，
实体类及接口的路径可以自由定义，在使用spring进行配置即可正常调用 此情况下使用动态调用则会异常。
HelloService:这种是基本用法(服务端单serivce可以直接用这种方式) 使用wsimport直接生成客户端代码并打成jar包，可以使用spring或动态方式调用
RoleService及TeamService:使用客户端及服务端共享的jar包，再利用spring方式调用，对于包名都没有任何约束。使用动态方式调用会因为实体类包名问题抛出异常。

cxf日期类型转换
凡是使用工具生成代码就会发生日期类型匹配问题
根据wsdl使用wsdl2java或wsimport工具生成的代码date会变为com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl类型，不能直接
转化为Date类型 如HelloService
解决方案
http://cxf.apache.org/docs/wsdl-to-java.html
http://blog.csdn.net/yuguiyang1990/article/details/9802347
http://cwfmaker.iteye.com/blog/1142835
使用定义好的binding.xml参与客户端代码生成
apache-cxf-3.1.11\bin\wsdl2java -b binding.xml http://localhost/service/helloService?wsdl
客户端需要引入
        <dependency>
            <groupId>org.apache.cxf.xjc-utils</groupId>
            <artifactId>cxf-xjc-runtime</artifactId>
            <version>3.1.0</version>
        </dependency>
将生成的两个包下的代码(生成时类型已自动转变完成)打成jar包导入工程即可
